<html>
	<head>
		<!-- Google Analytics Content Experiment code -->
<script>function utmx_section(){}function utmx(){}(function(){var
k='190853791-1',d=document,l=d.location,c=d.cookie;
if(l.search.indexOf('utm_expid='+k)>0)return;
function f(n){if(c){var i=c.indexOf(n+'=');if(i>-1){var j=c.
indexOf(';',i);return escape(c.substring(i+n.length+1,j<0?c.
length:j))}}}var x=f('__utmx'),xx=f('__utmxx'),h=l.hash;d.write(
'<sc'+'ript src="'+'http'+(l.protocol=='https:'?'s://ssl':
'://www')+'.google-analytics.com/ga_exp.js?'+'utmxkey='+k+
'&utmx='+(x?x:'')+'&utmxx='+(xx?xx:'')+'&utmxtime='+new Date().
valueOf()+(h?'&utmxhash='+escape(h.substr(1)):'')+
'" type="text/javascript" charset="utf-8"><\/sc'+'ript>')})();
</script><script>utmx('url','A/B');</script>
<!-- End of Google Analytics Content Experiment code -->


		<title>PlaybackC</title>
		<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
		<link href="https://gitcdn.github.io/bootstrap-toggle/2.2.2/css/bootstrap-toggle.min.css" rel="stylesheet">
			<link href="/css/project.css" rel="stylesheet">
				<meta name="viewport" content="width=device-width, initial-scale=1">
				<!-- Google Analytics -->
	<script>
	(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
	(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
	m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
	})(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

	ga('create', 'UA-135501908-1', 'auto');
	ga('send', 'pageview');
	</script>
	<!-- End Google Analytics -->
	</head>
				<body style="background-color: white">
					{{> toolbar }}
				<div class="row">
					<div class="col-md-12">
					<div class="embed-responsive embed-responsive-1by1" style="height:35%; background-color:white" id="replace">
					    
					    			<div id="iframe-new"></div>
					  </div>
					</div>
				</div>

				<div class="row">
					<div class="col-md-11" style="background-color:white; height: 7%; width: 90%;padding-right: 2%;padding-left: 10%;">
								<samp id="hTranscript" style="background-color:white; height: 100%;font-size: 70%; overflow-y:scroll;">
							 </samp>
					</div>
					<div class="col-md-1" style="background-color:white; width: 10%">
						<a>
						<i  id='settings' class="fas fa-cog fa-lg modalpos" data-toggle="modal" data-target=".bd-example-modal-sm" ></i>

																			<!-- Modal -->
												<div class="modal fade bd-example-modal-sm" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel" aria-hidden="true">
												  <div class="modal-dialog modal-sm">
												    <div class="modal-content">
												    	<div class="input-group mb-3">
														  <div class="input-group-prepend">
														    <label class="input-group-text" for="inputGroupSelect01">Language</label>
														  </div>
														  <select class="custom-select" id="languageSelect">
														    <option value="en">English</option>
														    <option value="ko">Korean</option>
														  </select>
														</div>

														  <!--
														<div class="input-group mb-3">
														  <div class="input-group-prepend">
														    <label class="input-group-text" for="inputGroupSelect01">Font Size</label>
														  </div>
														  <select class="custom-select" id="fontSelect">
														    <option selected>Choose...</option>
														    <option value="60">Small</option>
														    <option value="80">Medium</option>
														    <option value="100">Large</option>
														  </select>
														</div>
														-->
												    	<div><span class="label label-default"> Subtitles </span>  <input id="transcript" type="checkbox" checked data-toggle="toggle"></input> <br> <br></div>
												    	<!--
													   <div><span class="label label-default"> Subtitles </span> <input id="subtitles" type="checkbox" checked data-toggle="toggle"></input> <br></div><br>
													   -->
													   <div class="modal-footer">
												        <button type="button" class="btn btn-dark" data-dismiss="modal" id="Close">Close</button>
												      </div>
												    </div>
												  </div>
												</div>
									</a>
					</div>
				</div>

												<div class="row" style="height:50%">
													<div class="col-md-12">
														<!-- Content Reference - http://ixd.ucsd.edu/home/w19/lab/lab1/ --> <div id="carouselExampleIndicators" class="carousel slide" data-ride="carousel" data-interval="false" style="height:100%;width:100%"> <ol class="carousel-indicators"> <li data-target="#carouselExampleIndicators" data-slide-to="0" class="active"></li> <li data-target="#carouselExampleIndicators" data-slide-to="1"></li> <li data-target="#carouselExampleIndicators" data-slide-to="2"></li> </ol> <div class="carousel-inner"> <div class="carousel-item active"> <img class="d-block w-100" src="http://ixd.ucsd.edu/home/w19/lab/lab1/introhci-w19-lab1.008.png" style="height:100%;width:100%" alt="First slide"> </div> <div class="carousel-item"> <img class="d-block w-100" style="height:100%;width:100%" src="http://ixd.ucsd.edu/home/w19/lab/lab1/introhci-w19-lab1.010.png" alt="Second slide"> </div> <div class="carousel-item"> <img class="d-block w-100" style="height:100%;width:100%" src="http://ixd.ucsd.edu/home/w19/lab/lab1/introhci-w19-lab1.025.png" alt="Third slide"> </div> </div> <a class="carousel-control-prev" href="#carouselExampleIndicators" role="button" data-slide="prev"> <span class="carousel-control-prev-icon" aria-hidden="true"></span> <span class="sr-only">Previous</span> </a> <a class="carousel-control-next" href="#carouselExampleIndicators" role="button" data-slide="next"> <span class="carousel-control-next-icon" aria-hidden="true"></span> <span class="sr-only">Next</span> </a> </div>
													</div>
												</div>

						</a>
					</div>
				</div>

				<div class="row" style="height:30%">
					<div class="col-md-12">
								<div id="accordion">
									  <div class="card">
									    <div class="card-header" id="headingOne">
									      <h5 class="mb-0">
									        <button class="btn btn-link" data-toggle="collapse" data-target="#collapseOne" aria-expanded="false" aria-controls="collapseOne">
									           <div class="badge badge-info"> <h5> Q1 What is Github ?</h5> </div> 
									        </button>
									      </h5>
									    </div>

									    <div id="collapseOne" class="collapse show" aria-labelledby="headingOne" data-parent="#accordion">
									      <div class="card-body">
											<span class="badge badge-success">Version Control</span>
											<span class="badge badge-danger">Domain Hosting</span>
											<span class="badge badge-danger">Continous Integration</span>
											<span class="badge badge-danger">Test Suite</span>
									      </div>
									    </div>
									  </div>
									  <div class="card">
									    <div class="card-header" id="headingTwo">
									      <h5 class="mb-0">
									        <button class="btn btn-link collapsed" data-toggle="collapse" data-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
									          <span class="badge badge-info"> <h5> Q2 How to publish changes ? </h5> </span><br>   
									          
									        </button>
									      </h5>
									    </div>
									    <div id="collapseTwo" class="collapse" aria-labelledby="headingTwo" data-parent="#accordion">
									      <div class="card-body">
											<span class="badge badge-success">git add -> git commit -> git push</span>
											<span class="badge badge-danger">git pull</span>
											<span class="badge badge-danger">git stash -> git checkout</span>
											<span class="badge badge-danger">git blame</span>
									      </div>
									    </div>
									  </div>
									</div>	
					</div>	
				</div>
<!--
REFERENCES:
1) Smart Icons
2) Bootstrap toggle
3) MIT Opencourseware
-->
</body>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
   <script src="js/playbackB.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
    <script src="https://gitcdn.github.io/bootstrap-toggle/2.2.2/js/bootstrap-toggle.min.js"></script>
 <script async src="https://www.youtube.com/iframe_api"></script>
     <script>
     var tag = document.createElement('script');
      tag.src = "https://www.youtube.com/iframe_api";
      var firstScriptTag = document.getElementsByTagName('script')[0];
      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
      // 3. This function creates an <iframe> (and YouTube player)
      //    after the API code downloads.
      var player;
      function onYouTubeIframeAPIReady() {
        player = new YT.Player('iframe-new', {
          height: '390',
          width: '100%',
          videoId: 'k6U-i4gXkLM',
          events: {
            'onReady': onPlayerReady,
            'onStateChange': onPlayerStateChange
          },
          playerVars:
          {
          	'cc_load_policy':3,
          	//'cc_lang_pref': 'en',
          	'controls': 0,
          	'start': 1922
          }
        });
      }
      //https://stackoverflow.com/questions/13735783/youtube-api-how-to-use-custom-controls-to-turn-captions-on-off-change-languag

      // 4. The API will call this function when the video player is ready.
      function onPlayerReady(event) {
      	player.unloadModule("captions"); 
        event.target.playVideo();
      }

      // 5. The API calls this function when the player's state changes.
      //    The function indicates that when playing a video (state=1),
      //    the player should play for six seconds and then stop.
      var done = false;
      function onPlayerStateChange(event) {
        //if (event.data == YT.PlayerState.PLAYING && !done) {
        //  setTimeout(stopVideo, 6000);
        //  done = true;
        //}
        if(event.data === 1) {
        	if( highlight_loop == '' )
        		highlight_loop = setInterval(highlight, 250);
    	}
		else if(event.data === 2) {
		    clearInterval( highlight_loop );
		    highlight_loop = '';
		}
      }
      function stopVideo() {
        player.stopVideo();
      }
      //player.loadModule("captions");  //Works for html5 ignored by AS3
	  //player.loadModule("cc");
     </script>
</html>
